
description = "LightningJ Paywall Spring - Spring components for LightningJ Paywall"

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

apply plugin: 'signing'
apply plugin: 'maven'

dependencies {

    compile project(':paywall-core')

    compileOnly 'org.springframework:spring-context:5.1.4.RELEASE'
    compileOnly 'org.springframework:spring-core:5.1.4.RELEASE'
    compileOnly 'org.springframework:spring-web:5.1.4.RELEASE'
    compileOnly 'org.springframework:spring-webmvc:5.1.4.RELEASE'
    compileOnly 'org.springframework:spring-websocket:5.1.4.RELEASE'
    compileOnly 'org.springframework:spring-messaging:5.1.4.RELEASE'

    compileOnly 'javax.servlet:javax.servlet-api:4.0.1'
    testCompile 'javax.servlet:javax.servlet-api:4.0.1'
    
    testCompile 'org.spockframework:spock-spring:1.1-groovy-2.4'
    testCompile 'org.springframework:spring-test:5.1.4.RELEASE'
    testCompile 'org.springframework:spring-context:5.1.4.RELEASE'
    testCompile 'org.springframework:spring-web:5.1.4.RELEASE'
    testCompile 'org.springframework:spring-webmvc:5.1.4.RELEASE'
    testCompile 'org.springframework:spring-websocket:5.1.4.RELEASE'
    testCompile 'org.springframework:spring-messaging:5.1.4.RELEASE'

    // JAX-B dependencies for JDK 9+
    implementation "javax.xml.bind:jaxb-api:2.2.11"
    implementation "com.sun.xml.bind:jaxb-core:2.2.11"
    implementation "com.sun.xml.bind:jaxb-impl:2.2.11"
    implementation "javax.activation:activation:1.1.1"

}

task generateXSD(type: XSDGenerator, dependsOn: compileJava){
    classpath=compileTestJava.classpath.asPath
    generatedResourcesDir="${rootProject.projectDir}/paywall-spring/build/resources/main"
}

jar.dependsOn(generateXSD)

// Use external gpg2 command to support signing by hardware keys (i.e. SmartCard) and sign only
// if build should be uploaded to Maven Central.
signing {
    required { gradle.taskGraph.hasTask(uploadArchives) }
    useGpgCmd()
    sign configurations.archives
}

signArchives.onlyIf {gradle.taskGraph.hasTask(uploadArchives)}


uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            pom.project {
                name 'paywall-core'
                packaging 'jar'
                // optionally artifactId can be defined here
                description 'Paywall LightningJ - Micropayments for Microservices for Java - Core Library'
                url 'http://paywall.lightningj.org'

                scm {
                    connection 'https://github.com/lightningj-org/paywall.git'
                    developerConnection 'https://github.com/lightningj-org/paywall.git'
                    url 'https://github.com/lightningj-org/paywall'
                }

                licenses {
                    license {
                        name 'GNU Lesser General Public License v3.0'
                        url 'http://www.gnu.org/licenses/lgpl.txt'
                    }
                }

                developers {
                    developer {
                        id 'herrvendil'
                        name 'Philip Vendil'
                        email 'info@lightningj.org'
                    }
                }
            }
        }
    }
}

uploadArchives.dependsOn.add(signArchives)
