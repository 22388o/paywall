/*
 *************************************************************************
 *                                                                       *
 *  LightningJ                                                           *
 *                                                                       *
 *  This software is free software; you can redistribute it and/or       *
 *  modify it under the terms of the GNU Lesser General Public License   *
 *  (LGPL-3.0-or-later)                                                  *
 *  License as published by the Free Software Foundation; either         *
 *  version 3 of the License, or any later version.                      *
 *                                                                       *
 *  See terms of license at gnu.org.                                     *
 *                                                                       *
 *************************************************************************/
package org.lightningj.paywall.lightninghandler.lnd;

import org.lightningj.paywall.JSONParsable;
import org.lightningj.paywall.lightninghandler.LightningHandlerContext;

import javax.json.JsonException;
import javax.json.JsonObject;
import javax.json.JsonObjectBuilder;

/**
 * Context object for lightning handler generated by payment handler about latest state of invoices.
 *
 * Created by Philip Vendil on 2018-11-28.
 */
public class LNDLightningHandlerContext extends JSONParsable implements LightningHandlerContext{

    public static final String CONTEXT_TYPE = "lnd";

    protected Long addIndex;
    protected Long settleIndex;

    /**
     * Empty constructor
     */
    public LNDLightningHandlerContext(){}

    /**
     * Default constructor setting the current indicies.
     *
     * @param addIndex the last index checkpoint from payment handler for added invoices. Null for latest only.
     * @param settleIndex the last index checkpoint from payment handler for settled invoices. Null for latest only.
     */
    public LNDLightningHandlerContext(Long addIndex, Long settleIndex){
        this.addIndex = addIndex;
        this.settleIndex = settleIndex;
    }

    /**
     * Constructo for parsing json data.
     * @param jsonObject the context json object.
     */
    public LNDLightningHandlerContext(JsonObject jsonObject){
        super(jsonObject);
    }

    /**
     *
     * @return the last index checkpoint from payment handler for added invoices. Null for latest only.
     */
    public Long getAddIndex() {
        return addIndex;
    }

    /**
     *
     * @param addIndex the last index checkpoint from payment handler for added invoices. Null for latest only.
     */
    public void setAddIndex(Long addIndex) {
        this.addIndex = addIndex;
    }

    /**
     *
     * @return the last index checkpoint from payment handler for settled invoices. Null for latest only.
     */
    public Long getSettleIndex() {
        return settleIndex;
    }

    /**
     *
     * @param settleIndex the last index checkpoint from payment handler for settled invoices. Null for latest only.
     */
    public void setSettleIndex(Long settleIndex) {
        this.settleIndex = settleIndex;
    }

    /**
     * Method that should set the objects property to Json representation.
     *
     * @param jsonObjectBuilder the json object build to use to set key/values in json
     * @throws JsonException if problems occurred converting object to JSON.
     */
    @Override
    public void convertToJson(JsonObjectBuilder jsonObjectBuilder) throws JsonException {
        add(jsonObjectBuilder,"type", CONTEXT_TYPE);
        addNotRequired(jsonObjectBuilder,"addIndex", addIndex);
        addNotRequired(jsonObjectBuilder,"settleIndex", settleIndex);
    }

    /**
     * Method to read all properties from a JsonObject into this value object.
     *
     * @param jsonObject the json object to read key and values from and set object properties.
     * @throws JsonException if problems occurred converting object from JSON.
     */
    @Override
    public void parseJson(JsonObject jsonObject) throws JsonException {
        addIndex = getLongIfSet(jsonObject,"addIndex");
        settleIndex = getLongIfSet(jsonObject,"settleIndex");
    }
}
