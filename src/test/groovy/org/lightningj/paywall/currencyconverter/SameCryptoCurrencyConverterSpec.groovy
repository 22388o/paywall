/*
 *************************************************************************
 *                                                                       *
 *  LightningJ                                                           *
 *                                                                       *
 *  This software is free software; you can redistribute it and/or       *
 *  modify it under the terms of the GNU Lesser General Public License   *
 *  (LGPL-3.0-or-later)                                                  *
 *  License as published by the Free Software Foundation; either         *
 *  version 3 of the License, or any later version.                      *
 *                                                                       *
 *  See terms of license at gnu.org.                                     *
 *                                                                       *
 *************************************************************************/
package org.lightningj.paywall.currencyconverter

import org.lightningj.paywall.vo.amount.Amount
import org.lightningj.paywall.vo.amount.BTC
import org.lightningj.paywall.vo.amount.CryptoAmount
import org.lightningj.paywall.vo.amount.FiatAmount
import org.lightningj.paywall.vo.amount.Magnetude
import spock.lang.Specification

/**
 * Unit tests for SameCryptoCurrencyConverter
 *
 * Created by Philip Vendil on 2018-11-11.
 */
class SameCryptoCurrencyConverterSpec extends Specification {

    def converter = new SameCryptoCurrencyConverter()

    def "Verify that CryptoAmount is returned by convert() as it is"(){
        setup:
        Amount v1 = new BTC(123)
        when:
        CryptoAmount r1 = converter.convert(v1)
        then:
        v1 == r1
    }

    def "Verify that InvalidCurrencyException is thrown by convert() for non crypto amount"(){
        setup:
        Amount v1 = new FiatAmount()
        when:
        CryptoAmount r1 = converter.convert(v1)
        then:
        def e = thrown(InvalidCurrencyException)
        e.message == "Invalid currency generated by PaymentHandler, only CryptoAmount of same type as used by LightningHandler supported."
    }
}
