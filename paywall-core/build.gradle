

description = "LightningJ Paywall Core - Core Paywall components for Java"

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

apply plugin: 'signing'
apply plugin: 'maven'

dependencies {
    compile 'org.bouncycastle:bcprov-jdk15on:1.60'
    compile 'org.bouncycastle:bcpkix-jdk15on:1.60'
    compile 'org.lightningj:lightningj:0.7.0-Beta'
    compile 'org.bitbucket.b_c:jose4j:0.6.4' // JSON Web Token Generator, JWS and JWE
    compile "com.google.zxing:core:3.3.3" // QR Code Generator
    compile ('com.google.zxing:javase:3.3.3'){ // QR Code Generator, exclude unnecessary dependencies.
        exclude(group: "com.beust", module: "jcommander")
        exclude(group: "com.github.jai-imageio", module: "jai-imageio-core")
    }

    compileOnly 'javax.servlet:javax.servlet-api:4.0.1'
    testCompile 'javax.servlet:javax.servlet-api:4.0.1'

    // JAX-B dependencies for JDK 9+
    compile "javax.xml.bind:jaxb-api:2.2.11"
    compile "com.sun.xml.bind:jaxb-core:2.2.11"
    compile "com.sun.xml.bind:jaxb-impl:2.2.11"
    compile "javax.activation:activation:1.1.1"

    compileOnly "javax.annotation:javax.annotation-api:1.3.2"

}

// Add integration test task, with source sets etc.
apply from: 'integrationTest.gradle'

// Use external gpg2 command to support signing by hardware keys (i.e. SmartCard) and sign only
// if build should be uploaded to Maven Central.
signing {
    required { gradle.taskGraph.hasTask(uploadArchives) }
    useGpgCmd()
    sign configurations.archives
}

signArchives.onlyIf {gradle.taskGraph.hasTask(uploadArchives)}


uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: (project.hasProperty('ossrhUsername') ? ossrhUsername : ""), password: (project.hasProperty('ossrhPassword') ? ossrhPassword : ""))
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: (project.hasProperty('ossrhUsername') ? ossrhUsername : ""), password: (project.hasProperty('ossrhPassword') ? ossrhPassword : ""))
            }

            pom.project {
                name 'paywall-core'
                packaging 'jar'
                // optionally artifactId can be defined here
                description 'Paywall LightningJ - Micropayments for Microservices for Java - Core Library'
                url 'http://paywall.lightningj.org'

                scm {
                    connection 'https://github.com/lightningj-org/paywall.git'
                    developerConnection 'https://github.com/lightningj-org/paywall.git'
                    url 'https://github.com/lightningj-org/paywall'
                }

                licenses {
                    license {
                        name 'GNU Lesser General Public License v3.0'
                        url 'http://www.gnu.org/licenses/lgpl.txt'
                    }
                }

                developers {
                    developer {
                        id 'herrvendil'
                        name 'Philip Vendil'
                        email 'info@lightningj.org'
                    }
                }
            }
        }
    }
}

uploadArchives.dependsOn.add(signArchives)


